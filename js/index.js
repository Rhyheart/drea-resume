new Vue({
    el: '#app',
    data: function () {
        return {
            resume: {
                base: {
                    name: "阮恢雨",
                    sex: "男",
                    birthday: "1995-01",
                    address: "上海",
                    phone: "15927580370",
                    mail: "8120183@qq.com",
                    jobState: "在职",
                    reportState: "月内到岗",
                    experience: "5年经验",
                    position: "全栈工程师",
                    salary: "26K"
                },
                advantage: {
                    content: `后端：C#、多线程、委托、异步、反射、泛型、EF、IOC、Linq
                    前端：Vue、Vuex、Axios、JQuery、Ajax、JS、CSS、Xamarin
                    数据：SqlServer、MySQL、ElasticSearch、存储过程
                    框架：.NetCore、ABP、RPC、SSO、前后端分离、分布式、Docker、K8S
                    云端：阿里云、Azure、AWS
                    运维：Linux、Jenkins、GIT
                    测试：Jmeter、Postman`
                },
                works: [{
                    company: "霓蝶（上海）医疗科技有限公司",
                    position: ".NET高级开发工程师",
                    duration: "2021.10-至今",
                    content: `1. 参与系统业务梳理，系统功能开发
                    2. 参与服务器搭建，上线部署
                    3. 参与系统日常维护升级优化`
                },{
                    company: "上海雷钜物联网科技有限公司",
                    position: "架构师、项目经理",
                    duration: "2019.10-2021.10",
                    content: `1. 参与系统业务梳理，系统架构设计
                    2. 参与业务功能设计，探寻最佳解决方案
                    3. 参与日常任务分配，管理工作
                    4. 参与核心功能模块开发，服务器搭建，上线部署
                    5. 参与系统日常维护升级优化`
                }, {
                    company: "深圳市法本信息技术股份有限公司",
                    position: "全栈工程师",
                    duration: "2018.11-2019.10",
                    content: `1. 参与项目系统架构设计搭建
                    2. 参与项目后端接口开发、前端页面开发；
                    3. 参与后期项目维护`
                }, {
                    company: "上海晨光科力普办公用品有限公司",
                    position: ".NET开发工程师",
                    duration: "2017.04-2018.11",
                    content: `1. 参与Api系统基础架构、功能模块开发与设计
                    2. 参与平台项目对接，包括需求、业务设计、数据库设计、接口开发，页面开发整个流程
                    3. 需与与客户沟通进行业务梳理、需求分析，参与系统对接、问题跟进
                    4. 作为组内小组长，需与组员沟通协调，推进项目进度，协助组内小伙伴排查各类问题`
                }, {
                    company: "深圳冰润冷链科技有限公司",
                    position: ".NET开发工程师",
                    duration: "2016.05-2017.03",
                    content: `1. 参与系统业务梳理，系统架构设计
                    2. 参与业务功能设计，探寻最佳解决方案
                    3. 参与功能模块开发，服务器搭建，上线部署
                    4. 参与系统日常维护升级优化`
                }],
                projects: [
                    {
                        name: "IoT医疗设备标准管理",
                        position: "平台架构师、项目经理",
                        duration: "2019.10-2021.10",
                        content: `由于医疗设备品种繁多，系统独立性强，投放区域极为分散，因此设备供应商或医院需要投入大量人力成本去管理维护这些设备，但即使如此，还是存在诸多问题，例如设备发生异常后无法做出及时反馈，问题发现后解决流程极为繁琐等。为解决或极大避免此类问题，我们开发了IoT医疗设备管理平台，通过外接DTU方式将各类医疗设备接入物联网云平台做统一管理，本项目包含Dashboard、客户管理、DTU管理、设备管理、系统管理、大屏展示六大功能模块，整体采用.NET Core、EF、Vue、Element UI、前后端分离技术、云平台技术、分布式集群部署技术、数据库主从同步读写分离设计，云平台技术包含了物联网平台、应用托管服务、函数计算、对象存储、数据总线、大数据计算服务、容器服务Kubernetes版、云数据库SqlServer、云数据库Redis版等，本项目云端已适配微软云Azure、亚马逊云AWS、阿里云Aliyun，满足绝大多数公司对云平台要求。基于本标准项目，已成功开发希森美康、罗氏诊断、迪安诊断的IoT设备管理平台
                        ● 本人在此项目中担任架构师、项目经理角色，主要负责原型图设计、功能规格书设计、项目架构设计、云平台架构设计、项目管理、任务分配
                        【原型图设计】采用Axure RP设计原型图，高效、便捷、美观。
                        【项目架构设计-Web应用端】Web应用端整体采用前后端分离技术。Web后端分成Framework、Data、Share、Web四层，Framework层主要定义了基础返回模型、分页模型、数据异常模型、通用异常码、通用工具类等，Data层主要定义了EF的DBContext，Share层提供了一系列通用服务以及接口，Web层则主要定义一系列内外部访问接口控制器，采用.NetCore作为基础开发框架、EF作为数据库操作引擎、Log4Net作为日志引擎、OSS作为日志和文件存储介质、Swagger用于后端调试、SignIR用于前后端通信、Jwt作为Session认证鉴权协议、ServiceProvider用于依赖注入。Web前端采用Vue、ElementUI作为基础单页面应用框架，vue用于页面、页面组件开发，vue-router用于页面路由配置，vux用于页面状态管理，axios用于接口异步调用。
                        【项目架构设计-后台服务端】后台服务端分为定时任务和消息处理两大处理模式，整体技术框架与Web端一致，采用云平台函数计算服务进行部署。
                        【项目架构设计-数据库端】数据库端采用PowerDesigner设计，SqlServer作为本项目数据库引擎，部署上采用读写分离、主从设计，提升了高可用性。
                        【云平台架构设计】云平台端适配了微软云Azure、亚马逊云AWS、阿里云Aliyun。主要包含实时消息流处理、定时任务、站点部署。对于实时消息流处理，采用物联网平台（高效MQTT）接收来自设备的消息，通过配置Topic规则引擎，将采集上的数据流转至DataHub（队列缓冲），到达DataHub的数据会同步两份，一份同步到MaxCompute数据仓库，后期可进行大数据分析，另一份同步到函数计算，函数计算经过业务处理对数据进行清理后再流转至业务数据库中；对于定时任务，采用函数计算部署定时任务服务，通过配置crontab定时器从而达到定时执行目的；对于站点部署，采用k8s部署应用站点，完美的实现了站点的负载均衡、高可用、高并发、自动扩缩容`
                    },
                    {
                        name: "广汽乘用车PLS系统",
                        position: "全栈工程师",
                        duration: "2019.03-2019.10",
                        content: `为减轻汽车生产过程浩大的物料拉动、零件装配流转的管理压力，减少生成所需人力，实现智能化工厂，PLS生产物流系统孕育而生。本项目包含基础数据、物料拉动、仓库管理、取货管理、物流监控、接口管理、断点管理、PDA移动端、大屏监控、系统设置十大系统模块，项目整体采用.NET MVC、.NET CORE、WebService、WebApi、Windows服务设计，使用到了T4模板、JQuery、EasyUI、Xamarin、存储过程、数据库视图等技术
                        ● 本人在此大型项目中主要负责断点管理系统功能，以及全权负责大屏监控和PDA移动端开发。
                        【断点管理】本系统主要采用.NET MVC设计，通过配置方式，充分利用反射实现页面配置化，数据库增删改逻辑采用T4模板自动生成，尽可能的采用原生SQL、存储过程对数据库进行操作，减少连接次数，大幅提升系统性能；前台页面框架采用EasyUI，利用jQuery进行dom操作，可实现快速开发；对外接口采用WebService，灵活便捷；定时任务调度通过Windows服务承载，确保稳定运行。
                        【大屏监控】独立搭建项目框架，整体采用前后端分离技术，使用element ui作为前端组件，vue实现组件交互和数据双向绑定，Axios实现接口异步调用；采用Echart实现炫酷的图表效果，多维度对数据进行整合展示；后台采用.NET Core设计Web Api，利用EF+Linq实现对数据库的访问操作。
                        【PDA移动端】独自搭建项目框架，移动端采用原生跨平台的Xamarin开发，使用XAML声明方式设计跨平台用户界面，使用C#编写页面交互逻辑，源代码可同时编译生成原生Android、IOS、WP多平台应用。服务端采用.NET Core设计Web Api；采用JWT实现接口鉴权；遵循RPC远程过程调用协议，采用RestSharp设计接口SDK，移动端引用SDK后可直接调用内部封装好方法获取到远程数据，极大的规范了接口交互的方式，提升了开发效率。`
                    }, {
                        name: "罗氏诊断服务日志系统",
                        position: "全栈工程师",
                        duration: "2018.11-2019.03",
                        content: `本项目主要为了管理罗氏仪器在日常维护、维修以及保养活动。同时，方便工程师团队便捷及时的将服务结果传递给用户。本项目包含了用户管理、组织架构、年度服务计划、服务预约、部门日历、设备管理等模块，项目整体采用纯前后端分离模式开发，使用了.NET Core、EF、Vue、Element UI等技术。
                        ● 本人主要参与后端框架的优化，用户管理、年度服务计划、服务预约模块的前后端功能开发和对接集成、项目性能测试以及后期代码的Review。前端采用Element UI组件框架、Vue自定义组件设计页面，视图模型交互采用Vue实现，路由采用Vue Router，并使用Vuex存储用户状态，采用Axios实现接口交互。后端采用.NET Core作为基础框架，使用EF进行数据库操作，使用JWT实现跨域身份验证，采用自定义Middleware组件以及系统Filter标签实现用户权限拦截检测，使用Redis缓存用户信息，使用Blob存储服务预约图片，采用IOC容器和DI依赖注入技术来简化服务的创建。`
                    }, {
                        name: "Api管理系统3.0",
                        position: ".Net开发工程师",
                        duration: "2018.03-2018.11",
                        content: `Api 2.0项目的站点和数据库互相分离，采用单点登录方式进行整合，但如今对接项目已上百，维护起来还是很费劲，于是便催生了Api 3.0。包含模块有：商品中心、订单中心、结算中心、退换货、日志中心、配置中心、调度中心等。主要优点：轻量，采用.NET Core原生框架、微服务技术、前后端分离技术；集中，商品、订单等基础数据都将存入同一数据库内，使用项目编号进行区分；配置，集中管理项目配置，配置大于代码，项目对接更加便捷高效；拥抱开源，大量采用开源组件提高系统性能和开发效率。
                        ● 本人主要参与退换货、日志中心、配置中心模块的设计开发、服务器环境搭建以及网关部署。整体上，后台采用.NET Core+EF，前台采用Layui+Vue，前后端采用Ajax进行交互，数据库采用MySql。其中，退换货使用RabbitMQ实现状态变更通知，采用管道设计模式将业务进行细分，使得系统更加灵活；日志中心采用ActionBlock实现异步处理，最终同步到MongoDB中，采用Butterfly开源组件实现系统调用链跟踪监控；配置中心采用覆盖式设计，提高了配置灵活性，配置更新采用MQTT实现实时通知，以便业务项目中的配置缓存可以得到及时更新`
                    }, {
                        name: "Api管理系统 2.0",
                        position: ".Net开发工程师",
                        duration: "2017.04-2018.03",
                        content: `Api 1.0采用Xml文本进行存储，控制台进行管理，对接的项目都是分开的，导致后期维护相当困难，于是便催生了Api 2.0。2.0系统主要实现电商系统标准化对接，集中化管理。包含商品、订单、结算单、退换货、消息队列、配置、导入导出等模块，采用ABP开源框架进行开发，该框架已封装各类常用组件，采用模块化设计，使用起来相当便捷。
                        ● 本人参与商品、退换货、配置以及导入导出业务框架的设计开发。采用Autofac组件实现DI注入达到解耦，Automap进行数据模型转换，使用ABP EFRepository仓储组件操作数据库，其中重点开发导入导出功能，采用了NPOI实现Excel导入导出，使用SignaIR进行前后端交互达到实时进度通知目的。采用MemoryCache实现配置缓存，同时参与后期框架维护升级以及后续系统对接工作。`
                    }, {
                        name: "冰润冷链管理系统",
                        position: ".Net开发工程师",
                        duration: "2016.04-2017.03",
                        content: `本项目主要实现对智能冷链系统中的设备进行监控和管理，包含：用户中心、产品模板、设备管理、监控面板、项目管理、设备地图等功能模块。采用.NET Framework作为开发框架，产品设备等基础数据采用MySql存储，数据上报、设备警报数据采用HBase存储，缓存采用Redis，MQTT作为设备数据上报通知队列。
                        ● 本人参与该项目整体业务框架的设计，主要负责产品、设备接口开发，产品、设备、设备地图、实时数据等页面开发；采用.NET Core作为开发框架，采用EF、Linq进行数据库操作，AutoFac作为DI注入容器实现解耦，Redis作为缓存数据库；采用bootstrap和vuejs进行前台页面设计，使用echatjs设计实时数据折线图；使用百度地图api实现设备地图；也参与系统的整体测试。`
                    }, {
                        name: "Smile机器人",
                        position: "全栈工程师",
                        duration: "2015.07-2016.04",
                        content: `本项目是基于QQ机器人框架开发的智能AI应用，包含：签到、娱乐、银行、便民、精灵、冒险、结婚、帮派、聊天、语音、群管等功能模块，拥有上百个功能点。
                        ● 本项目是在自学完C#自行设计，采用Winform设计页面，SQLite作为存储数据库，实现了上百个简单实用的小功能，后期采用.Net Core和Element UI搭建了后台接口站点，提供基础数据、卡密管理、卡密鉴权、用户统计等服务，开发了近30个自研数据接口，另外通过调用第三方接口实现了图片识别、语音识别、语音回复等高级功能。本应用日活已上千，注册数近五万，曾在百万注册用户的酷Q社区排名第二，现切换至其他平台，一个月时间已入热门主题榜第一。
                        ● 应用地址：<a href='https://open.drea.cc/8' target="_blank">https://open.drea.cc/8<a/>
                        ● 配套社区：<a href='https://drea.cc' target="_blank">https://drea.cc<a/>`
                    }
                ],
                certificates: ["计算机二级", "NIT全国计算机应用水平证书", "高等学校英语应用能力A级", "Microsoft Azure Administrator"],
                educations: [
                    {
                        school: "武汉软件工程职业学院",
                        level: "大专（本科分数）",
                        professional: "物联网",
                        duration: "2014-2017",
                        content: `1. 在校担任：团支书、宣传委员
                        2. 在校学习：C语言程序设计、公共英语、Android程序设计、计算机电路基础和电路设计、数据库原理和应用、传感器和检测技术、单片机原理和接口技术、数据结构、Linux操作系统、C#.NET程序设计等。`

                    }
                ]
            },
            loading: {}
        }
    }, created() {
        this.loading = this.$loading({
            lock: true,
            text: 'Loading',
            spinner: 'el-icon-loading',
            background: 'rgba(0, 0, 0, 0.7)'
        });
    }, mounted() {
        this.loading.close();
    }
})